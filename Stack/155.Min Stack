class MinStack {
Stack<Integer> st =new Stack<>();
        Stack<Integer> min1=new Stack<>();   
         public MinStack() {
        
    }

    public void push(int val) {
        st.push(val);
        if (min1.empty()){
            min1.push(val);
        }
        else if (min1.peek()>=val){
            min1.push(val);
        }
        
    }
    
    public void pop() {
        int ch=st.pop();
        if (!min1.empty() && min1.peek()==ch){
            min1.pop();
        }
        
    }
    
    public int top() {
        if (!st.empty())
            return  st.peek();
        return 0;
    }
    
    public int getMin() {
        if(!min1.empty())
             return min1.peek();
        return 0;
            }
}

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(val);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */
